//Powerful Integer
class Solution {
    public int powerfulInteger(int[][] intervals, int k) {
    TreeMap<Integer, Integer> delta = new TreeMap<>();
    for (int[] interval : intervals) {
        delta.put(interval[0], delta.getOrDefault(interval[0], 0) + 1);
        delta.put(interval[1] + 1, delta.getOrDefault(interval[1] + 1, 0) - 1);
    }
    int count = 0, ans = -1, prev = -1;
    for (int point : delta.keySet()) {
        if (prev != -1 && count >= k) {
            ans = Math.max(ans, point - 1);
        }
        count += delta.get(point);
        prev = point;
    }
    return ans;
}

}
