//Minimum days to make M bouquets
class Solution {
    public int minDaysBloom(int[] arr, int k, int m) {
        int n = arr.length;
        if (m * k > n) return -1;
        int left = Integer.MAX_VALUE, right = Integer.MIN_VALUE;
        for (int i = 0; i < n; ++i) {
            left = Math.min(left, arr[i]);
            right = Math.max(right, arr[i]);
        }
        int res = -1;
        while (left <= right) {
            int mid = left + (right - left) / 2;
            int total = 0, curr = 0;
            for (int i = 0; i < n; ++i) {
                if (arr[i] <= mid) {
                    curr++;
                    if (curr == k) {
                        total++;
                        curr = 0;
                    }
                } else {
                    curr = 0;
                }
            }
            if (total >= m) {
                res = mid;
                right = mid - 1;
            } else {
                left = mid + 1;
            }
        }
        return res;
    }
}
