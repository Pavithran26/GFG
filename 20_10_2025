//Number of BST From Array
import java.util.*;

class Solution {
    public ArrayList<Integer> countBSTs(int[] arr) {
        int n = arr.length;
        ArrayList<Integer> result = new ArrayList<>();
        
        // Sort the array to easily find positions
        int[] sorted = arr.clone();
        Arrays.sort(sorted);
        
        // Precompute Catalan numbers up to n
        long[] catalan = new long[n + 1];
        catalan[0] = 1;
        
        for (int i = 1; i <= n; i++) {
            catalan[i] = 0;
            for (int j = 0; j < i; j++) {
                catalan[i] += catalan[j] * catalan[i - j - 1];
            }
        }
        
        // For each element, find its position in sorted array
        // The number of BSTs = catalan[leftCount] * catalan[rightCount]
        for (int i = 0; i < n; i++) {
            int pos = Arrays.binarySearch(sorted, arr[i]);
            int leftCount = pos;  // elements smaller than current
            int rightCount = n - pos - 1;  // elements larger than current
            
            result.add((int)(catalan[leftCount] * catalan[rightCount]));
        }
        
        return result;
    }
}