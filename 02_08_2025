//Longest Subarray with Majority Greater than K
class Solution {
    public int longestSubarray(int[] arr, int k) {
        int n = arr.length;
        Map<Integer, Integer> map = new HashMap<>();
        int ans = 0, sum = 0;
        for(int i = 0; i < n; i++) {
            if(arr[i] <= k) sum--;
            else sum++;
            if(sum > 0) ans = i + 1;
            else if(map.containsKey(sum - 1)) {
                ans = Math.max(ans, i - map.get(sum - 1));
            }
            if(!map.containsKey(sum)) {
                map.put(sum, i);
            }
        }
        return ans;
    }
}
