//Next Greater Element in Circular Array

import java.util.ArrayList;
import java.util.Stack;

class Solution {
    public ArrayList<Integer> nextLargerElement(int[] arr) {
        int n = arr.length;
        ArrayList<Integer> result = new ArrayList<>(n);
        Stack<Integer> stack = new Stack<>();
        
        // Initialize the result list with -1
        for (int i = 0; i < n; i++) {
            result.add(-1);
        }
        
        // We process the array twice to handle circularity
        for (int i = 0; i < 2 * n; i++) {
            int currentIndex = i % n;
            while (!stack.isEmpty() && arr[stack.peek()] < arr[currentIndex]) {
                int top = stack.pop();
                if (result.get(top) == -1) {
                    result.set(top, arr[currentIndex]);
                }
            }
            // Only push the index during the first pass
            if (i < n) {
                stack.push(currentIndex);
            }
        }
        
        return result;
    }
}